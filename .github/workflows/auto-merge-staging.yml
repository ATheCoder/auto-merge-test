name: Auto Merge Develop to Staging

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - staging

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    if: ${{ github.event.pull_request.head.ref == 'develop' && github.event.pull_request.base.ref == 'staging' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout staging branch
        uses: actions/checkout@v3
        with:
          ref: 'staging'
          fetch-depth: 0

      - name: Set up git authentication
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Get previous staging commit ID
        id: get_prev_commit
        run: |
          PREV_COMMIT=$(git rev-parse HEAD)
          echo "Previous staging commit ID: $PREV_COMMIT"
          echo "::set-output name=prev_commit::$PREV_COMMIT"

      - name: Reset staging to develop
        run: |
          git fetch origin develop
          git reset --hard origin/develop
          git push origin staging --force

      - name: Add comment to PR with previous commit ID
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prevCommit = '${{ steps.get_prev_commit.outputs.prev_commit }}';
            const prNumber = context.payload.pull_request.number;
            const commentBody = `The previous commit ID of the staging branch was: \`${prevCommit}\`. The staging branch has been reset to \`develop\`.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody,
            });


